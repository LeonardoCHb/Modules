{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Desktop/DESENVOLVIMENTO WEB/go_stack/Modules/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = userState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \" Explore repositorios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do repositorio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Pesquisar\")), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, repository.description, \" \")), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/leonardo/Desktop/DESENVOLVIMENTO WEB/go_stack/Modules/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","Title","Form","Repositories","Dashboard","newRepo","setNewRepo","inputError","setInputError","userState","repositories","setRepositories","handleAddRepository","event","preventDefault","logoImg","e","target","value","map","repository","full_name","owner","avatar_url","login","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA8B,gBAA9B;;AAKA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAAyC,UAAzC;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BC,SAAS,CAAC,EAAD,CAA7C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAea,mBAAf,CAAmCC,KAAnC,EACoB;AAChBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,CAACT,OAAL,EAAa;AACTG,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACH;AAGJ;;AAED,sBAEI,uDACI;AAAK,IAAA,GAAG,EAAEO,OAAV;AAAmB,IAAA,GAAG,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,eAII,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,KAAK,EAAEP,OADP;AAEA,IAAA,QAAQ,EAAIW,CAAD,IAAaV,UAAU,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAFlC;AAGA,IAAA,WAAW,EAAC,8BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CAJJ,eAaI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCR,YAAY,CAACS,GAAb,CAAiBC,UAAU,iBACxB;AAAG,IAAA,GAAG,EAAEA,UAAU,CAACC,SAAnB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACA,IAAA,GAAG,EAAED,UAAU,CAACE,KAAX,CAAiBC,UADtB;AAEA,IAAA,GAAG,EAAEH,UAAU,CAACE,KAAX,CAAiBE,KAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,UAAU,CAACC,SAApB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,UAAU,CAACK,WAAf,MAFJ,CANA,eAWA,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADH,CADD,CAbJ,CAFJ;AAqCH,CApDD;;AAsDA,eAAerB,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react'\nimport { FiChevronRight} from 'react-icons/fi'\nimport api from '../../services/api'\n\nimport logoImg from '../../assets/logo.svg'\n\nimport { Title, Form, Repositories} from './styles'\n\ninterface Repository {\n    full_name: string\n    description: string\n    owner: {\n        login: string\n        avatar_url: string\n    }\n}\n\nconst Dashboard: React.FC = () => {\n    const [newRepo, setNewRepo] = useState('')\n    const [inputError, setInputError] = userState('')\n    const [repositories, setRepositories] = useState<Repository[]>([])\n\n    async function handleAddRepository(event: FormEvent<HTMLFormElement>,\n        ):Promise<void> {\n        event.preventDefault()\n        if (!newRepo){\n            setInputError('Digite o autor/nome do repositorio')\n        }\n\n\n    }\n\n    return (\n\n        <>\n            <img src={logoImg} alt=\"Github Explorer\" />\n            <Title> Explore repositorios no Github</Title>\n\n            <Form onSubmit={handleAddRepository} >\n                <input\n                value={newRepo} \n                onChange= {(e): void => setNewRepo(e.target.value)}\n                placeholder=\"Digite o nome do repositorio\"\n                />\n                <button type=\"submit\">Pesquisar</button>\n            </Form>\n\n            <Repositories>\n            {repositories.map(repository => (\n                <a key={repository.full_name} href=\"teste\">\n                <img \n                src={repository.owner.avatar_url} \n                alt={repository.owner.login} \n                />\n\n                <div>\n                    <strong>{repository.full_name}</strong>\n                    <p>{repository.description} </p>\n                </div>\n\n                <FiChevronRight size={20} />\n            </a>\n            ))}\n            \n            </Repositories>\n\n        </>\n\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}