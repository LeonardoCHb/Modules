{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Desktop/DESENVOLVIMENTO WEB/go_stack/Modules/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error } from './styles';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storageRepositories = localStorage.getItem('@GithubExplorer:repositories');\n\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories);\n    }\n\n    return [];\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositorio');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \" Explore repositorios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do repositorio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repositories/${repository.full}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, repository.description, \" \")), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/leonardo/Desktop/DESENVOLVIMENTO WEB/go_stack/Modules/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Link","api","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","storageRepositories","localStorage","getItem","JSON","parse","setItem","stringify","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","full_name","full","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react'\nimport { FiChevronRight } from 'react-icons/fi'\nimport { Link } from 'react-router-dom'\nimport api from '../../services/api'\n\nimport logoImg from '../../assets/logo.svg'\n\nimport { Title, Form, Repositories, Error } from './styles'\n\ninterface Repository {\n    full_name: string\n    description: string\n    owner: {\n        login: string\n        avatar_url: string\n    }\n}\n\nconst Dashboard: React.FC = () => {\n    const [newRepo, setNewRepo] = useState('')\n    const [inputError, setInputError] = useState('')\n    const [repositories, setRepositories] = useState<Repository[]>(() => {\n        const storageRepositories = localStorage.getItem('@GithubExplorer:repositories')\n\n        if (storageRepositories) {\n            return JSON.parse(storageRepositories)\n        }\n\n        return []\n    })\n\n\n\n    useEffect(() => {\n        localStorage.setItem(\n            '@GithubExplorer:repositories', \n            JSON.stringify(repositories),\n        )\n    }, [repositories])\n\n    async function handleAddRepository(event: FormEvent<HTMLFormElement>,\n    ): Promise<void> {\n        event.preventDefault()\n        if (!newRepo) {\n            setInputError('Digite o autor/nome do repositorio')\n            return;\n        }\n        try {\n\n            const response = await api.get<Repository>(`repos/${newRepo}`)\n\n            const repository = response.data\n\n            setRepositories([...repositories, repository])\n            setNewRepo('')\n            setInputError('')\n        } catch(err) {\n            setInputError('Erro na busca por esse repositorio')\n        }\n\n    }\n\n    return (\n\n        <>\n            <img src={logoImg} alt=\"Github Explorer\" />\n            <Title> Explore repositorios no Github</Title>\n\n            <Form hasError={!!inputError} onSubmit={handleAddRepository} >\n                <input\n                    value={newRepo}\n                    onChange={(e): void => setNewRepo(e.target.value)}\n                    placeholder=\"Digite o nome do repositorio\"\n                />\n                <button type=\"submit\">Pesquisar</button>\n            </Form>\n\n            { inputError && <Error>{inputError}</Error>}\n\n            <Repositories>\n                {repositories.map(repository => (\n                    <Link key={repository.full_name} to={`/repositories/${repository.full}`}>\n                        <img\n                            src={repository.owner.avatar_url}\n                            alt={repository.owner.login}\n                        />\n\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description} </p>\n                        </div>\n\n                        <FiChevronRight size={20} />\n                    </Link>\n                ))}\n\n            </Repositories>\n\n        </>\n\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}